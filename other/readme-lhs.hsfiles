{-# START_FILE readme.lhs #-}
{{name}}
===

[![Build Status](https://travis-ci.org/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}.png)](https://travis-ci.org/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}})

{{name}}
---

usage
---

To build & run:

~~~
stack install && readme
~~~

To build, run & render:

~~~
stack build --copy-bins --exec "readme" --exec "pandoc -f markdown+lhs -i readme.lhs -t html -o index.html --filter pandoc-include --mathjax" --exec "pandoc -f markdown+lhs -i readme.lhs -t markdown -o readme.md --filter pandoc-include --mathjax" --exec "echo Yah, it succeeded!" --file-watch
~~~

> import Protolude
>
> main :: IO ()
> main = putStrLn ("ok" :: Text)

{-# START_FILE {{name}}.cabal #-}
name:
  {{name}}
version:
  0.1.0.0
synopsis:
  See readme.lhs
description:
  See readme.lhs
category:
  project
homepage:
  https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}
license:
  BSD3
license-file:
  LICENSE
author:
  {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:
  {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:
  {{copyright}}{{^copyright}}{{year}}{{^year}}2017{{/year}} {{authorName}}{{^authorName}}Author name here{{/authorName}}{{/copyright}}
build-type:
  Simple
cabal-version:
  >=1.14
extra-source-files:
  stack.yaml
library
  default-language:
    Haskell2010
  ghc-options:
  hs-source-dirs:      

  exposed-modules:

  build-depends:
    base >= 4.7 && < 5
  default-extensions:
    NoImplicitPrelude,
    UnicodeSyntax,
    BangPatterns,
    BinaryLiterals,
    DeriveFoldable,
    DeriveFunctor,
    DeriveGeneric,
    DeriveTraversable,
    DisambiguateRecordFields,
    EmptyCase,
    FlexibleContexts,
    FlexibleInstances,
    FunctionalDependencies,
    GADTSyntax,
    InstanceSigs,
    KindSignatures,
    LambdaCase,
    MonadComprehensions,
    MultiParamTypeClasses,
    MultiWayIf,
    NegativeLiterals,
    OverloadedStrings,
    ParallelListComp,
    PartialTypeSignatures,
    PatternSynonyms,
    RankNTypes,
    RecordWildCards,
    RecursiveDo,
    ScopedTypeVariables,
    TupleSections,
    TypeFamilies,
    TypeOperators

executable readme
  default-language:
    Haskell2010
  ghc-options:
    -funbox-strict-fields
    -fforce-recomp
    -threaded
    -rtsopts
    -with-rtsopts=-N
  hs-source-dirs:
    ./
  main-is:
    readme.lhs
  build-depends:
    base >= 4.7 && < 5,
    protolude,
    {{name}}
  default-extensions:
    NoImplicitPrelude,
    UnicodeSyntax,
    BangPatterns,
    BinaryLiterals,
    DeriveFoldable,
    DeriveFunctor,
    DeriveGeneric,
    DeriveTraversable,
    DisambiguateRecordFields,
    EmptyCase,
    FlexibleContexts,
    FlexibleInstances,
    FunctionalDependencies,
    GADTSyntax,
    InstanceSigs,
    KindSignatures,
    LambdaCase,
    MonadComprehensions,
    MultiParamTypeClasses,
    MultiWayIf,
    NegativeLiterals,
    OverloadedStrings,
    ParallelListComp,
    PartialTypeSignatures,
    PatternSynonyms,
    RankNTypes,
    RecordWildCards,
    RecursiveDo,
    ScopedTypeVariables,
    TupleSections,
    TypeFamilies,
    TypeOperators

source-repository head
  type:
    git
  location:
    https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}

{-# START_FILE .gitignore #-}
/.stack-work/
TAGS

{-# START_FILE .gitattributes #-}
other/* linguist-documentation
index.html linguist-documentation

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2017{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

{-# START_FILE .travis.yml #-}
## modified version of the complex Travis configuration.
# For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#

# Use new container infrastructure to enable caching
sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  - env: BUILD=cabal GHCVER=7.8.4 CABALVER=1.18 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC 7.8.4"
    addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC 7.10.3"
    addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC 8.0.1"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS="--resolver lts-7"
    compiler: ": #stack 8.0.1"
    addons: {apt: {packages: [libgmp-dev]}}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  # Build on macOS in addition to Linux
  - env: BUILD=stack ARGS="--resolver lts-7"
    compiler: ": #stack 8.0.1 osx"
    os: osx

  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
  - env: BUILD=stack ARGS="--resolver nightly"


before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

  if [ "$CABALVER" != "1.16" ]
  then
    echo 'jobs: $ncpus' >> $HOME/.cabal/config
  fi

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests
        cabal build
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex